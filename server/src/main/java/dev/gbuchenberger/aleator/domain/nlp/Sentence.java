//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.09 at 04:04:19 PM MST 
//


package dev.gbuchenberger.aleator.domain.nlp;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlMixed;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;
import org.jvnet.hyperjaxb3.item.MixedItem;
import org.jvnet.hyperjaxb3.item.MixedItemUtils;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element ref="{}dependencies"/>
 *         &lt;element ref="{}parse"/>
 *         &lt;element ref="{}tokens"/>
 *       &lt;/choice>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "content"
})
@XmlRootElement(name = "sentence")
@Entity(name = "Sentence")
@Table(name = "SENTENCE")
@Inheritance(strategy = InheritanceType.JOINED)
public class Sentence {

    @XmlElementRefs({
        @XmlElementRef(name = "dependencies", type = Dependencies.class),
        @XmlElementRef(name = "parse", type = JAXBElement.class),
        @XmlElementRef(name = "tokens", type = Tokens.class)
    })
    @XmlMixed
    protected List<Object> content;
    @XmlAttribute(name = "id")
    protected BigInteger id;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;
    protected transient List<Sentence.SentenceContentItem> contentItems;

    /**
     * Gets the value of the content property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the content property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Dependencies }
     * {@link JAXBElement }{@code <}{@link String }{@code >}
     * {@link Tokens }
     * {@link String }
     * 
     * 
     */
    @Transient
    public List<Object> getContent() {
        if (content == null) {
            content = new ArrayList<Object>();
        }
        return this.content;
    }

    /**
     * 
     * 
     */
    public void setContent(List<Object> content) {
        this.content = content;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "ID", precision = 20, scale = 0)
    public BigInteger getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setId(BigInteger value) {
        this.id = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    @OneToMany(targetEntity = Sentence.SentenceContentItem.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONTENTITEMS_SENTENCE_HJID")
    public List<Sentence.SentenceContentItem> getContentItems() {
        if (this.contentItems == null) {
            this.contentItems = new ArrayList<Sentence.SentenceContentItem>();
        }
        if (MixedItemUtils.shouldBeWrapped(this.content)) {
            this.content = MixedItemUtils.wrap(this.content, this.contentItems, Sentence.SentenceContentItem.class);
        }
        return this.contentItems;
    }

    public void setContentItems(List<Sentence.SentenceContentItem> value) {
        this.content = null;
        this.contentItems = null;
        this.contentItems = value;
        if (this.contentItems == null) {
            this.contentItems = new ArrayList<Sentence.SentenceContentItem>();
        }
        if (MixedItemUtils.shouldBeWrapped(this.content)) {
            this.content = MixedItemUtils.wrap(this.content, this.contentItems, Sentence.SentenceContentItem.class);
        }
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @Entity(name = "Sentence$SentenceContentItem")
    @Table(name = "SENTENCECONTENTITEM")
    @Inheritance(strategy = InheritanceType.JOINED)
    public static class SentenceContentItem
        implements MixedItem<Object>
    {

        @XmlElementRefs({
            @XmlElementRef(name = "dependencies", type = Dependencies.class),
            @XmlElementRef(name = "parse", type = JAXBElement.class),
            @XmlElementRef(name = "tokens", type = Tokens.class)
        })
        protected Object item;
        @XmlAttribute(name = "Text")
        protected String text;
        @XmlAttribute(name = "Hjid")
        protected Long hjid;

        /**
         * 
         * 
         * @return
         *     possible object is
         *     {@link Dependencies }
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     {@link Tokens }
         *     
         */
        @Transient
        public Object getItem() {
            return item;
        }

        /**
         * 
         * 
         * @param value
         *     allowed object is
         *     {@link Dependencies }
         *     {@link JAXBElement }{@code <}{@link String }{@code >}
         *     {@link Tokens }
         *     
         */
        public void setItem(Object value) {
            this.item = value;
        }

        /**
         * Gets the value of the text property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "TEXT")
        @Lob
        public String getText() {
            return text;
        }

        /**
         * Sets the value of the text property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setText(String value) {
            this.text = value;
        }

        /**
         * Gets the value of the hjid property.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        @Id
        @Column(name = "HJID")
        @GeneratedValue(strategy = GenerationType.AUTO)
        public Long getHjid() {
            return hjid;
        }

        /**
         * Sets the value of the hjid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         */
        public void setHjid(Long value) {
            this.hjid = value;
        }

        @ManyToOne(targetEntity = Dependencies.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "ITEMDEPENDENCIES_SENTENCECON_0")
        public Dependencies getItemDependencies() {
            if (this.getItem() instanceof Dependencies) {
                return ((Dependencies) this.getItem());
            } else {
                return null;
            }
        }

        public void setItemDependencies(Dependencies target) {
            if (target!= null) {
                setItem(target);
            }
        }

        @Basic
        @Column(name = "ITEMPARSE", length=1024)
        public String getItemParse() {
            if (XmlAdapterUtils.isJAXBElement(String.class, new QName("", "parse"), JAXBElement.GlobalScope.class, this.getItem())) {
                return XmlAdapterUtils.unmarshallJAXBElement(((JAXBElement<? extends String> ) this.getItem()));
            } else {
                return null;
            }
        }

        public void setItemParse(String target) {
            if (target!= null) {
                setItem(XmlAdapterUtils.marshallJAXBElement(String.class, new QName("", "parse"), JAXBElement.GlobalScope.class, target));
            }
        }

        @ManyToOne(targetEntity = Tokens.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "ITEMTOKENS_SENTENCECONTENTIT_0")
        public Tokens getItemTokens() {
            if (this.getItem() instanceof Tokens) {
                return ((Tokens) this.getItem());
            } else {
                return null;
            }
        }

        public void setItemTokens(Tokens target) {
            if (target!= null) {
                setItem(target);
            }
        }

    }

}
